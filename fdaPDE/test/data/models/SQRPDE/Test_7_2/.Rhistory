for(file_name in file_names){
file = paste0("alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
# Remove folders
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
folder_name = paste0(getwd(), "/", "alpha_", alphas_folder, "/", sim_folder, "/GCV")
if(file.exists(folder_name)) {
unlink(folder_name,recursive = TRUE)
cat("Directory has been deleted \n")
}
}
}
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv")
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0("alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
setwd("C:/Users/marco/OneDrive - Politecnico di Milano/Corsi/Magistrale/Anno_II_Semestre_II/PACS_project_shared/R/Our/to_deliver/tests_wrappers/Test_6")
## RMK: set the directory to the source file location
##      ("Session" --> "Set Working Directory" --> "To source file location")
rm(list = ls())
graphics.off()
seed = 21
set.seed(seed)
alpha = c(0.1, 0.5, 0.9)
source("../utilities.R")
library(rgl)
library(Matrix)
library(plot3D)
library(fdaPDE)
library(fdaPDE2)
## create mesh, hub domain
data(hub2.5D)
mesh_base = create.mesh.2.5D(nodes = hub2.5D$hub2.5D.nodes, triangles = hub2.5D$hub2.5D.triangles)
mesh = refine.by.splitting.mesh.2.5D(mesh = mesh_base)
mesh_data <- list(
"nodes"    = mesh$nodes,
"edges"    = mesh$edges,
"elements" = mesh$triangles,
"neigh"    = mesh$neighbors,
"boundary" = mesh$nodesmarkers
)
nodes = mesh$nodes
locations = nodes
n = dim(locations)[1]
## mean and standard deviation functions for the data generation
mean.function = function(p){
x = p[,1]
y = p[,2]
z = p[,3]
f = 1*sin(2*pi*x)+1*sin(2*pi*y)+3*sin(2*pi*z)
return(f)
}
std.function = function(p){
x = p[,1]
y = p[,2]
z = p[,3]
f = 2*abs(z-0.5)+0.1
return(f)
}
## true beta vector
beta_true = c(2,1)
q = length(beta_true)
## covariates
set.seed(seed)
cov1 <- (rnorm(n, mean = 0 , sd = 1))
set.seed(seed)
cov2 <- (rexp(n, rate = 1))
X = cbind(cov1 ,cov2)
write.csv(format(X, digits = 16), file = paste0(getwd(), "/X.csv"))
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_6")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "X.csv")
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0("alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
alphas_folders = c("10", "50", "90")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "X.csv")
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0("alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
# Remove folders
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
folder_name = paste0(getwd(), "/", "alpha_", alphas_folder, "/", sim_folder, "/GCV")
if(file.exists(folder_name)) {
unlink(folder_name,recursive = TRUE)
cat("Directory has been deleted \n")
}
}
}
24*24
35*35
71*71
142^2
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_7_1")
rm(list = ls())
graphics.off()
N_folders = c("N_576", "N_1225", "N_2500", "N_5041", "N_10000",
"N_20164", "N_40000")
alphas_folders = c("10", "50", "90")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0("alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/alpha_", alphas_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
# Remove folders
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
folder_name = paste0(N_folder, "/", sim_folder, "/GCV")
if(file.exists(folder_name)) {
unlink(folder_name,recursive = TRUE)
cat("Directory has been deleted \n")
}
}
}
}
rm(list = ls())
graphics.off()
rm(list = ls())
graphics.off()
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_7_2")
N_folders = c("N_742", "N_1452", "N_2789", "N_5502", "N_11011",
"N_22086", "N_44136")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
alphas_folders = c("50")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
sqrt(3969)
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
N_folders = c("N_742") # , "N_1452", "N_2789", "N_5502", "N_11011",
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(, "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0("/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
rm(list = ls())
graphics.off()
# N_folders = c("N_576", "N_1225", "N_2500", "N_5041", "N_10000",
#               "N_20164", "N_40000")
N_folders = c("N_742") # , "N_1452", "N_2789", "N_5502", "N_11011",
# "N_22086", "N_44136")
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
