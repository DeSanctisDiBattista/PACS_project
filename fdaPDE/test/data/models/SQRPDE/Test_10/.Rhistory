10^seq(-9, -5)
png("C:/Users/marco/OneDrive - Politecnico di Milano/Corsi/Magistrale/Anno_II_Semestre_II/PACS_project_shared/R/Our/prova.png")
image2D(z = matrix(c(0,0,10,0), nr = 2, nc = 2), x=seq(0,1, length.out = 2), y=seq(0,1, length.out = 2),
main = paste("Quantile field (true - C++), alpha =", alpha),
col=cols, contour = TRUE)
dev.off()
library(plot3D)
png("C:/Users/marco/OneDrive - Politecnico di Milano/Corsi/Magistrale/Anno_II_Semestre_II/PACS_project_shared/R/Our/prova.png")
image2D(z = matrix(c(0,0,10,0), nr = 2, nc = 2), x=seq(0,1, length.out = 2), y=seq(0,1, length.out = 2),
main = paste("Quantile field (true - C++), alpha =", alpha),
col=cols, contour = TRUE)
dev.off()
library(plot3D)
png("C:/Users/marco/OneDrive - Politecnico di Milano/Corsi/Magistrale/Anno_II_Semestre_II/PACS_project_shared/R/Our/prova.png")
image2D(z = matrix(c(0,0,10,0), nr = 2, nc = 2), x=seq(0,1, length.out = 2), y=seq(0,1, length.out = 2),
main = paste("Quantile field (true - C++), alpha =", alpha),
col=c(1,2), contour = TRUE)
dev.off()
library(plot3D)
png("C:/Users/marco/OneDrive - Politecnico di Milano/Corsi/Magistrale/Anno_II_Semestre_II/PACS_project_shared/R/Our/prova.png")
image2D(z = matrix(c(0,0,10,0), nr = 2, nc = 2), x=seq(0,1, length.out = 2), y=seq(0,1, length.out = 2),
main = paste("Quantile field (true - C++), alpha =", 0.1),
col=c(1,2), contour = TRUE)
dev.off()
library(sn)
xi_ = 4
omega_ = 0.05*(3+3)
skewed_t <- rsn(nnodes, xi = xi_, omega = omega_, alpha = 5)
skewed_t <- rsn(3600, xi = xi_, omega = omega_, alpha = 5)
skewed_t <- skewed_t - mean(skewed_t)
hist(skewed_t )
expression("RMSE", _f)
expression("RMSE"[f])
t0 = Sys.time()
t1 = Sys.time()
t2 = Sys.time()
d1 = t1 - t0
d2 = t2 - t1
d1 + d2
d1
d2
1.635791 + 1.545531
587*4
sqrt(0.0286^2 + 0.1632^2 + 0.0449^2)
.libPaths()
exp(1.5)
log(4)
exp(2.5)Ã¹
exp(2.5)
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_7_2")
rm(list = ls())
graphics.off()
# N_folders = c("N_576", "N_1225", "N_2500", "N_5041", "N_10000",
#               "N_20164", "N_40000")
N_folders = c("N_742") # , "N_1452", "N_2789", "N_5502", "N_11011",
# "N_22086", "N_44136")
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
file_names = c("betaCpp_massFALSE.csv")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
rm(list = ls())
graphics.off()
N_folders = c("N_742", "N_1452", "N_2789", "N_5502", "N_11011",
"N_22086", "N_44136")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
alphas_folders = c("50")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"LambdaCpp_massFALSE.csv", "LambdaCpp_massTRUE.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv", "JR.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv", "LambdaR_50.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
rm(list = ls())
graphics.off()
# N_folders = c("N_576", "N_1225", "N_2500", "N_5041", "N_10000",
#               "N_20164", "N_40000")
N_folders = c("N_742", "N_1452", "N_2789", "N_5502") # ,"N_11011", "N_22086", "N_44136")
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "locs.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"LambdaCpp_massFALSE.csv", "LambdaCpp_massTRUE.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv", "JR.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv", "LambdaR_50.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_9")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
rm(list = ls())
graphics.off()
# N_folders = c("N_576", "N_1225", "N_2500", "N_5041", "N_10000",
#               "N_20164", "N_40000")
N_folders = c("N_742", "N_1452", "N_2789", "N_5502") # ,"N_11011", "N_22086", "N_44136")
n_folders = C("n_256", "n_484", "n_1024", "n_2025", "n_3969")
n_folders = C("n_256", "n_484", "n_1024", "n_2025", "n_3969")
n_folders = c("n_256", "n_484", "n_1024", "n_2025", "n_3969")
alphas_folders = c("50")
sim_folders = c("sim_1", "sim_2", "sim_3", "sim_4", "sim_5",
"sim_6", "sim_7", "sim_8", "sim_9", "sim_10")
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"LambdaCpp_massFALSE.csv", "LambdaCpp_massTRUE.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv", "JR.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv", "LambdaR_50.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt")
setwd("C:/Users/marco/PACS/Project/Code/Cpp/fdaPDE-fork/test/data/models/SQRPDE/Test_10")
for(N_folder in N_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
for(n_folder in n_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", N_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file
for(n_folder in n_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", n_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
file_names <- c("f_true.csv", "fCpp.csv", "fn_true.csv",
"fnCpp.csv", "mean.csv",
"sd_dev.csv", "betaCpp.csv", "fntrue.csv", "ftrue.csv", "JCpp.csv",
"niterCpp.csv", "LambdaCpp_Cholesky.csv", "LambdaCpp_Woodbury.csv",
"LambdaCpp_massFALSE.csv", "LambdaCpp_massTRUE.csv",
"betaCpp_massFALSE.csv", "betaCpp_massTRUE.csv", "betaR.csv",
"fCpp_massFALSE.csv", "fCpp_massTRUE.csv", "JR.csv",
"fnCpp_massFALSE.csv", "fnCpp_massTRUE.csv", "fR.csv", "fnR.csv",
"JCpp_massTRUE.csv", "JCpp_massFALSE.csv", "LambdaR_50.csv",
"niterCpp_massTRUE.csv", "niterCpp_massFALSE.csv", "niterR.csv",
"sol_true.csv", "Time_Cpp_massFALSE.csv", "Time_Cpp_massTRUE.csv",
"Time_R.txt", "Time_Cpp.csv", "LambdaR.csv", "LambdaCpp.csv")
for(n_folder in n_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
for(file_name in file_names){
file = paste0(getwd(), "/", n_folder, "/", sim_folder, "/", file_name)
cat(paste0("\n File : ", file, "\n"))
if(file.exists(file)){
unlink(file)
print("File is deleted..")
}else{
print("File not exists..")
}
}
}
}
}
# Remove folders
for(n_folder in n_folders){
for(alphas_folder in alphas_folders){
for(sim_folder in sim_folders){
folder_name = paste0(n_folder, "/", sim_folder, "/GCV")
if(file.exists(folder_name)) {
unlink(folder_name,recursive = TRUE)
cat("Directory has been deleted \n")
}
}
}
}
