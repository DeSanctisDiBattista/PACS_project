rm(list = ls())
graphics.off()
seed = 21
set.seed(seed)
alphas = c(0.1, 0.5, 0.9)
library(fdaPDE2)
## create mesh, unit sphere
data(sphere3Ddata)  # version 1 of fdaPDE is required
source("../utilities.R")
library(rgl)
library(Matrix)
library(plot3D)
## create mesh, unit sphere
data(sphere3Ddata)  # version 1 of fdaPDE is required
library(fdaPDE)
## create mesh, unit sphere
data(sphere3Ddata)  # version 1 of fdaPDE is required
## create mesh, unit sphere
data(sphere3Ddata)  # version 1 of fdaPDE is required
mesh.coarse = create.mesh.3D(sphere3Ddata$nodes, sphere3Ddata$tetrahedrons)
mesh = refine.by.splitting.mesh.3D(mesh = mesh.coarse)
nodes = mesh$nodes
mesh_data <- list(
"nodes"    = mesh$nodes,
"edges"    = mesh$faces,
"elements" = mesh$tetrahedrons,
"neigh"    = mesh$neighbors,
"boundary" = mesh$nodesmarkers
)
View(sphere3Ddata)
View(sphere3Ddata)
save(sphere2Ddata)
save(sphere3Ddata)
save(sphere3Ddata.Rdata)
save(sphere3Ddata, "sphere3Ddata.Rdata")
save(sphere3Ddata, "/sphere3Ddata.Rdata")
save(sphere3Ddata, file = "/sphere3Ddata.Rdata")
save(sphere3Ddata, file = "/sphere3Ddata.Rdata")
save(sphere3Ddata, file = "sphere3Ddata.Rdata")
## create mesh, unit sphere
load(sphere3Ddata)
###------------------------TEST 4-----------------------------------------------
# domain:       unit sphere
# sampling:     locations != nodes
# penalization: laplacian
# covariates:   yes
# BC:           no
# order FE:     1
rm(list = ls())
graphics.off()
seed = 21
set.seed(seed)
alphas = c(0.1, 0.5, 0.9)
source("../utilities.R")
library(rgl)
library(Matrix)
library(plot3D)
library(fdaPDE2)
#-------------------------------------------------------------------------------
## create mesh, unit sphere
load("sphere3Ddata.RData")
mesh.coarse = create.mesh.3D(sphere3Ddata$nodes, sphere3Ddata$tetrahedrons)
###------------------------TEST 4-----------------------------------------------
# domain:       unit sphere
# sampling:     locations != nodes
# penalization: laplacian
# covariates:   yes
# BC:           no
# order FE:     1
rm(list = ls())
graphics.off()
seed = 21
set.seed(seed)
alphas = c(0.1, 0.5, 0.9)
source("../utilities.R")
library(rgl)
library(Matrix)
library(plot3D)
library(fdaPDE)
library(fdaPDE2)
alpha_index = 0
setwd("C:/Users/marco/OneDrive/Desktop/tests_wrappers/Test_3")
## Load mesh
load("/horseshoe2D_areal.RData")
## Load mesh
load("horseshoe2D_areal.RData")
incidence_matrix = read.csv("/incidence_matrix.csv")
incidence_matrix = read.csv("incidence_matrix.csv")
View(incidence_matrix)
incidence_matrix = read.csv("incidence_matrix.csv")[, -1]
View(incidence_matrix)
## create mesh, hub domain
data(hub2.5D)
